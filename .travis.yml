# Integración continua Travis CI

# Lenguaje de programación

language: cpp

# Sistema operativo destino a probar

os: linux

# Distribución del sistema operativo

dist: trusty

# Requerimiento de permisos en Linux

sudo: enabled

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-7
      - g++-7

# Compiladores a emplear

#compiler:
 #  - gcc
  # - clang

# Tareas a realizar antes de instalacción

before_install:


# Actualizar

  - sudo apt-get -qq update

# Configurar Git si no lo está

  - if [ ! `git config --get user.email` ]; then `git config --global user.email 'user@example.com'`; fi
  - if [ ! `git config --get user.name` ]; then `git config --global user.name 'Travis CI'`; fi

# En caso de requerir instalar algo para la prueba
  - mkdir repos
  - cd repos
  - git clone https://github.com/FloopCZ/tensorflow_cc.git
  - git clone https://www.github.com/davidvelascogarcia/tensorflowDetection2D

install:

# Instalar YARP

  - sudo sh -c 'echo "deb http://www.icub.org/ubuntu trusty contrib/science" > /etc/apt/sources.list.d/icub.list'
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 57A5ACB6110576A6
  - sudo apt-get update
  - sudo apt-get install yarp

# Instalar OpenCV

  - sudo apt-get install libopencv-dev

# Instalar realpath

  - sudo apt-get install realpath


# Instalar GCC7

#  - sudo apt-get update 
#  - sudo apt-get install build-essential software-properties-common
#  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
#  - sudo apt-get update
#  - sudo apt-get install gcc-7 g++-7 
#  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7 
#  - sudo update-alternatives --config gcc

  - cd tensorflow_cc
  - cd tensorflow_cc
  - mkdir build && cd build
  - cmake -DTENSORFLOW_STATIC=OFF -DTENSORFLOW_SHARED=ON ..
  - export CC=gcc-7
  - export CXX=g++-7
  - travis_retry 30 make
  - sudo make install
# Tareas a ejecutar antes de nuestra prueba

before_script:
 
  - cd ..
  - cd ..
  - cd ..
  - cd tensorflowDetection2D
  - cd programs
  - cd tensorflowDetection2D
  - mkdir build
  - cd build
  - cmake ..

# Compilamos

script:

  - make

# En caso de compilación exitosa

after_success:
  - sudo make install
  - sudo make uninstall

# Notificaciones por correo

notifications:
email: true
